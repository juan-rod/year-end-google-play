// cubic-bezier
@function cb($fn: default) {
  @return map-get($easings, $fn);
}

// em
@function em($pixels, $context: 16) {
  @return #{$pixels/$context}em;
}

// color-control
@function cc($color, $option: false, $alpha: false) {
  $opacity: null;
  $palette: null;

  @if ($alpha)  {$opacity: $alpha;}
  @else         {$opacity: if(type-of($option) == 'number', $option, false);}

  @if ($option) {$palette: if(type-of($option) == 'number', default, $option);}
  @else         {$palette: default;}

  $getPalette: map-get($colors, $palette);

  @return if($opacity, rgba(map-get($getPalette, $color), $opacity), map-get($getPalette, $color));
}
 // n is number of stars required
@function multiple-box-shadow($n){ 
$value: '#{random(2000)}px #{random(2000)}px #FFF';
@for $i from 2 through $n{
  $value: '#{$value} , #{random(2000)}px #{random(2000)}px #FFF';
  @return unquote($value)
}
}